// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MapbdContext))]
    [Migration("20241220094535_UpdMapbd")]
    partial class UpdMapbd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Government", b =>
                {
                    b.Property<int>("GovernmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GovernmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GovernmentId"));

                    b.Property<int>("KingdomId")
                        .HasColumnType("int")
                        .HasColumnName("KingdomID");

                    b.Property<string>("LeaderName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("GovernmentId");

                    b.HasIndex("KingdomId");

                    b.ToTable("Governments");
                });

            modelBuilder.Entity("WebApplication1.Models.Img", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.HasKey("ImageId");

                    b.HasIndex("RegionId");

                    b.ToTable("Img", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Inhabitant", b =>
                {
                    b.Property<int>("InhabitantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InhabitantID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InhabitantId"));

                    b.Property<int>("KingdomId")
                        .HasColumnType("int")
                        .HasColumnName("KingdomID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("InhabitantId");

                    b.HasIndex("KingdomId");

                    b.ToTable("Inhabitants");
                });

            modelBuilder.Entity("WebApplication1.Models.Kingdom", b =>
                {
                    b.Property<int>("KingdomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KingdomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KingdomId"));

                    b.Property<int>("GovernmentId")
                        .HasColumnType("int")
                        .HasColumnName("GovernmentID");

                    b.Property<string>("KingdomName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kingdomName");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.Property<string>("Trading")
                        .IsRequired()
                        .HasMaxLength(270)
                        .HasColumnType("nvarchar(270)");

                    b.HasKey("KingdomId");

                    b.HasIndex("RegionId");

                    b.ToTable("﻿﻿kingdoms", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Landscape", b =>
                {
                    b.Property<int>("LandscapeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LandscapeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandscapeId"));

                    b.Property<string>("LandscapeType")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.HasKey("LandscapeId");

                    b.HasIndex("RegionId");

                    b.ToTable("Landscapes");
                });

            modelBuilder.Entity("WebApplication1.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<int>("KingdomId")
                        .HasColumnType("int")
                        .HasColumnName("KingdomID");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LanguageId");

                    b.HasIndex("KingdomId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("WebApplication1.Models.NeighRegion", b =>
                {
                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.Property<int>("RegionId1")
                        .HasColumnType("int")
                        .HasColumnName("RegionID1");

                    b.Property<int>("RegionId2")
                        .HasColumnType("int")
                        .HasColumnName("RegionID2");

                    b.Property<int>("RegionId3")
                        .HasColumnType("int")
                        .HasColumnName("RegionID3");

                    b.HasKey("RegionId");

                    b.HasIndex("RegionId1");

                    b.ToTable("NeighRegions");
                });

            modelBuilder.Entity("WebApplication1.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"));

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("WebApplication1.Models.Settlement", b =>
                {
                    b.Property<int>("SettlementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettlementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettlementId"));

                    b.Property<int>("KingdomId")
                        .HasColumnType("int")
                        .HasColumnName("KingdomID");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<string>("SettlementName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SettlementId");

                    b.HasIndex("KingdomId");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("WebApplication1.Models.Temperature", b =>
                {
                    b.Property<int>("TemperatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TemperatureID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemperatureId"));

                    b.Property<int>("AverageTemperature")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasColumnName("RegionID");

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("TemperatureId");

                    b.HasIndex("RegionId");

                    b.ToTable("Temperatures");
                });

            modelBuilder.Entity("WebApplication1.Models.Government", b =>
                {
                    b.HasOne("WebApplication1.Models.Kingdom", "Kingdom")
                        .WithMany("Governments")
                        .HasForeignKey("KingdomId")
                        .IsRequired()
                        .HasConstraintName("FK_Governments_﻿﻿kingdoms");

                    b.Navigation("Kingdom");
                });

            modelBuilder.Entity("WebApplication1.Models.Img", b =>
                {
                    b.HasOne("WebApplication1.Models.Region", "Region")
                        .WithMany("Imgs")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_Img_Regions");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WebApplication1.Models.Inhabitant", b =>
                {
                    b.HasOne("WebApplication1.Models.Kingdom", "Kingdom")
                        .WithMany("Inhabitants")
                        .HasForeignKey("KingdomId")
                        .IsRequired()
                        .HasConstraintName("FK_Inhabitants_﻿﻿kingdoms");

                    b.Navigation("Kingdom");
                });

            modelBuilder.Entity("WebApplication1.Models.Kingdom", b =>
                {
                    b.HasOne("WebApplication1.Models.Region", "Region")
                        .WithMany("Kingdoms")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_﻿﻿kingdoms_Regions");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WebApplication1.Models.Landscape", b =>
                {
                    b.HasOne("WebApplication1.Models.Region", "Region")
                        .WithMany("Landscapes")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_Landscapes_Regions");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WebApplication1.Models.Language", b =>
                {
                    b.HasOne("WebApplication1.Models.Kingdom", "Kingdom")
                        .WithMany("Languages")
                        .HasForeignKey("KingdomId")
                        .IsRequired()
                        .HasConstraintName("FK_Languages_﻿﻿kingdoms");

                    b.Navigation("Kingdom");
                });

            modelBuilder.Entity("WebApplication1.Models.NeighRegion", b =>
                {
                    b.HasOne("WebApplication1.Models.Region", "RegionId1Navigation")
                        .WithMany("NeighRegions")
                        .HasForeignKey("RegionId1")
                        .IsRequired()
                        .HasConstraintName("FK_NeighRegions_Regions1");

                    b.Navigation("RegionId1Navigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Settlement", b =>
                {
                    b.HasOne("WebApplication1.Models.Kingdom", "Kingdom")
                        .WithMany("Settlements")
                        .HasForeignKey("KingdomId")
                        .IsRequired()
                        .HasConstraintName("FK_Settlements_﻿﻿kingdoms");

                    b.Navigation("Kingdom");
                });

            modelBuilder.Entity("WebApplication1.Models.Temperature", b =>
                {
                    b.HasOne("WebApplication1.Models.Region", "Region")
                        .WithMany("Temperatures")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_Temperatures_Regions");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WebApplication1.Models.Kingdom", b =>
                {
                    b.Navigation("Governments");

                    b.Navigation("Inhabitants");

                    b.Navigation("Languages");

                    b.Navigation("Settlements");
                });

            modelBuilder.Entity("WebApplication1.Models.Region", b =>
                {
                    b.Navigation("Imgs");

                    b.Navigation("Kingdoms");

                    b.Navigation("Landscapes");

                    b.Navigation("NeighRegions");

                    b.Navigation("Temperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
